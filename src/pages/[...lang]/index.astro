---
import type { CV } from "@/cv";
import Form from "@/Editor/components/Form/Form";
import Layout from "@/layouts/Layout.astro";
import Cv from "@/core/components/CV/Cv";
import { i18n } from "@/core/i18n/config";
import { useTranslation, type Locale } from "@/core/i18n/utils";
import { getCollection } from "astro:content";
import ExpandIcon from "@/core/icons/expand.astro"
import FileExport from "@/core/icons/file-export.astro";
import FileImport from "@/core/icons/file-import.astro";
import Print from "@/core/icons/print.astro";

const lang = Astro.params.lang as Locale ?? i18n.defaultLocale
const uiContent = useTranslation(lang)
const pages = await getCollection("cv");
const cv = pages.find((page) => page.id === lang)
---

<Layout title="Portafolio">
    <div class="editor-container">
      <button class="button no-print" id="extend-button"><ExpandIcon /></button>
             <ul class="preview-controls">
                <li><button id="print-button" class="button"><Print /></button></li>
                <li><button id="export-button" class="button"><FileExport /></button></li>
                <li><button id="import-button" class="button"><FileImport /></button></li>
            </ul>
        <main class="editor no-print box-shadow">
            <Form client:load defaultValues={cv?.data} />
        </main>
        <aside class="preview box-hadow">
            <Cv client:load uiContent={uiContent} />
        </aside>
    </div>
</Layout>

<script>
  const appendButton = document.getElementById("extend-button")
  const cvPreview = document.querySelector(".editor-container")
  const printButton = document.getElementById("print-button")
  const importButton = document.getElementById("import-button")
  const exportButton = document.getElementById("export-button")

  appendButton?.addEventListener("click", ()=>{
    cvPreview?.classList.toggle("expanded")
  })

  printButton?.addEventListener("click", () => {
    print()
  })

  exportButton?.addEventListener("click", ()=>{

  })

  importButton?.addEventListener("click", ()=>{

  })

</script>

<style>
    .editor-container {
        background-color: #eee;
        display: flex;
        position: relative;
    }

    .editor-container > * {
        overflow-y: scroll;
        max-height: 100vh;
    }

    .editor {
        width: 100vw;
        transition: width 0.20s ease-in-out;
        background-color: #fff;
    }

    .preview {
      max-width: 100vw;
      margin: auto;
      padding-left: 1rem;
    }

    .expanded > .editor {
      width: 0;
    }

    .expanded > .preview {
      display: initial;
      overflow: initial;
    }

    .box-shadow {
        box-shadow: 0 0 8px rgba(0, 0, 0, 0.1);
    }

    #extend-button {
      position: fixed;
      right: 1rem;
      top: 1rem;
      z-index: 100;
    }

    .preview-controls {
      display: none;
    }

    .expanded > #extend-button
    {
      transform: scale(-1, 1);
    }

    @media print {
      .editor-container > * {
          overflow-y: initial;
          max-height: 100vh;
      }
    }

    @media screen {

      .preview {
        display: none;
      }

        .preview-controls {
          display: flex;
          position: fixed;
          justify-content: space-between;
          gap: 0.5rem;
          top: 1rem;
          right: 50px;
          z-index: 1000;
      }

      @media (min-width: 500px) {
        .editor {
          width: initial;
        }

        .preview {
          display: initial;
        }

        .preview-controls {
          flex-direction: column;
          top: 50%;
          margin-top: 0;
          transform: translateY(-50%);
          right: 50px;
      }
        
        #extend-button {
          display: none;
        }
        
    }
  }
</style>
